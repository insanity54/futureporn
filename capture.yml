---

- hosts: localhost
  tasks:

    - name: Determine if capture-1 is up
      uri:
        method: GET
        url: "https://api.vultr.com/v2/instances?label=capture-1"
        headers:
          Authorization: "Bearer {{ lookup('env', 'VULTR_API_KEY') }}"
      register: capture1_check


    - name: Spin up low-end box capture-1 in Atlanta
      when: (capture1_check.json.meta.total | int == 0)
      uri:
        status_code:
          - 200
          - 202 # Vultr returns status 202 so we gotta tell ansible that that is acceptible
        method: POST
        url: "https://api.vultr.com/v2/instances"
        body_format: json
        body:
          os_id: 387 # Ubuntu 20.04 LTS x64
          region: atl
          plan: vc2-1c-1gb
          sshkey_id: 
            - 30abb7c0-0361-4e6f-8168-e9ac464b2ba3
          tag: futureporn
          label: capture-1
        headers:
          Authorization: "Bearer {{ lookup('env', 'VULTR_API_KEY') }}"
      register: spin_capture_1

    - name: wait for VPS to ge up
      pause:
        seconds: 30
      when: spin_capture_1.changed

    - name: Determine if manager is up
      uri:
        method: GET
        url: "https://api.vultr.com/v2/instances?label=capture-2"
        headers:
          Authorization: "Bearer {{ lookup('env', 'VULTR_API_KEY') }}"
      register: manager_check


    - name: Spin up a STRONK VPS to handle ul/dl file tasks
      when: (manager is defined and (manager | bool)) and (manager_check.json.meta.total | int == 0)
      uri:
        status_code:
          - 200
          - 202 # Vultr returns status 202 so we gotta tell ansible that that is acceptible
        method: POST
        url: "https://api.vultr.com/v2/instances"
        body_format: json
        body:
          os_id: 387 # Ubuntu 20.04 LTS x64
          region: dfw
          plan: vc2-4c-8gb
          sshkey_id: 
            - 30abb7c0-0361-4e6f-8168-e9ac464b2ba3
          tag: futureporn
          label: capture-2
        headers:
          Authorization: "Bearer {{ lookup('env', 'VULTR_API_KEY') }}"
      register: spin_capture_2


    - name: wait for VPS to be up
      pause:
        seconds: 30
      when: spin_capture_2.changed


    - name: Refresh Inventory
      meta: refresh_inventory


- hosts: capture-*
  gather_facts: no
  vars:
    - ansible_user: root
    - ipfs_version: v0.12.2
  roles:
    - role: base
    - role: geerlingguy.nodejs
    - role: capture
    - role: scout
      when: not (manager | default(false) | bool)
    - role: jeffbr13.ipfs 
      when: (manager | default(false) | bool)
