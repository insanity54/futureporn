---



# unfortunately the ngine_io.vultr.vultr inventory module does not contain instance UUIDs,
# a dependency for vultr.cloud.block_storage
# as a workaround, we get the UUID from API.
- name: get instance data from vultr API.
  ansible.builtin.uri:
    url: https://api.vultr.com/v2/instances
    method: GET
    body_format: json
    status_code: [200, 202]
    return_content: true
    headers:
      Authorization: "Bearer {{ lookup('env', 'VULTR_API_KEY') }}"
  delegate_to: localhost
  run_once: yes
  register: instances

- debug: var=instances


- name: get just this vultr instance data
  set_fact:
    instance: "{{ instances.json.instances | selectattr('label', 'equalto', inventory_hostname) | first }}"


- name: get the region (3 letter short version) and the instance UUID
  set_fact:
    region: "{{ instance.region }}"
    uuid: "{{ instance.id }}"


- name: Ensure a block storage volume exists and is attached to server
  vultr.cloud.block_storage:
    name: "{{ inventory_hostname }}-storage"
    state: present
    attached_to_instance: "{{ uuid }}"
    region: "{{ region }}"
    size_gb: "{{ storage_gb }}"
    block_type: "storage_opt"
    live: yes
  delegate_to: localhost


- name: Create partition for vultr block storage
  community.general.parted:
    device: /dev/vdb
    number: 1
    state: present
    label: gpt
    fs_type: ext4

- name: Create a ext4 filesystem 
  community.general.filesystem:
    fstype: ext4
    dev: /dev/vdb1

- name: mount block storage
  ansible.posix.mount:
    path: "/root/futureporn_tmp"
    src: /dev/vdb1
    fstype: ext4
    opts: defaults,noatime,nofail
    state: mounted

- name: add --enable-gc to the ipfs daemon StartExec
  lineinfile:
    path: /etc/systemd/system/ipfs.service
    regexp: '^ExecStart'
    line: 'ExecStart=/usr/local/bin/ipfs daemon --migrate --enable-gc'
    insertafter: '^\[Service\]'
    state: present
  notify:
    - reload systemd
    - restart IPFS
  tags:
    - gc

- name: add ExecStartPre to remove the IPFS dir to workaround flakey garbage collection issue
  lineinfile:
    path: /etc/systemd/system/ipfs.service
    regexp: '^ExecStartPre'
    line: 'ExecStartPre=rm -rf /home/ipfs/.ipfs/blocks/ && sync'
    insertafter: '^\[Service\]'
    state: present
  notify:
    - reload systemd
    - restart IPFS
  tags:
    - gc


